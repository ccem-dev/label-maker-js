(function() {
  'use strict';
  
  angular
    .module('otusjs.labelMaker.setupView',[]);
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.setupView')
    .component('labelMaker', {
      template:'<div layout="row" layout-align="center center"><md-button class="md-raised md-primary" ng-click="$ctrl.generateLabelPage()">Gerar Etiquetas</md-button></div>',
      controller: Controller,
      bindings: {
        labelData: '<'
      }
    });

  Controller.$inject = [
    '$scope',
    '$rootScope',
    '$compile',
    '$element',
    'otusjs.labelMaker.labelBuilder.LabelService'
  ];

  function Controller($scope, $rootScope, $compile, $element, LabelService) {
    var self = this;
    var LABEL_PAGE = '<label-page/>';

    self.generateLabelPage = generateLabelPage;

    $scope.$on("Data_Ready", function(event) {
      self.ready = true;
    });

    $scope.$on("Data_Error", function(event) {
      self.dataError = true;
    });

    function generateLabelPage() {
      var scope = $rootScope.$new();
      scope.labelData = self.labelData;
      var labelPage = $compile(LABEL_PAGE)(scope);
    }

  }
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.labelBuilder',[
      'otusjs.labelMaker.labelBuilder.labelComponents'
    ]);
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.labelBuilder')
    .service('otusjs.labelMaker.labelBuilder.LabelService', Service);

  Service.$inject = [
     '$compile',
      'otusjs.labelMaker.dataBuilder.DataBuilderService',
    ];

  function Service($compile, DataBuilderService) {
    var self = this;

    _init();
    /* Public Interface */
    self.getTubesList = getTubesList;
    self.getBaseInfo = getBaseInfo;
    self.getLaboratoryInfo = getLaboratoryInfo;
    self.pushInfo = pushInfo;

    function _init() {
      //DataBuilderService.fetchTubesData();
    }

    function pushInfo(json) {
      return DataBuilderService.pushInfo(json);
    }

    function getLaboratoryInfo() {
      return DataBuilderService.getLaboratoryInfo();
    }

    function getBaseInfo() {
      return DataBuilderService.getBaseInfo();
   }

    function getTubesList($scope) {
      return DataBuilderService.getTubesList();
    }

  }
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.labelBuilder.labelComponents', [])
    .constant(
      'BARCODE_SETTINGS', {
        format: 'CODE39',
        width: 1.1,
        height: 15,        
        displayValue: true,
        font: "monospace",
        textAlign: "center",
        fontSize: 10,
        //   backgroundColor: "",
        //   lineColor: "#000"
      }
    );
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.labelBuilder.labelComponents')
    .component('tubesLabel', {
      transclude: true,
      template:'<div>3<base-label ng-if ng-repeat="tubeLabel in $ctrl.tubesRepeat" base="$ctrl.BaseInfo" tube="tubeLabel" label-component="\'biomaterial\'"></base-label></div>',
      controller: Controller,
      bindings: {
        base: '<',
        tube: '<'
      }
    });

  Controller.$inject = [
    '$scope',
    '$element',
    '$compile',
    'BARCODE_SETTINGS'
  ];

  function Controller($scope, $element, $compile, BARCODE_SETTINGS) {
    var self = this;

    self.renderBarcode = renderBarcode;
    self.BaseInfo = angular.copy(self.base);
    self.tubesRepeat = []

    self.$onInit = function() {
      $compile($element.contents())($scope);
      for(var i = 0; i < self.tube.printStructure.quantity; i++) {
        self.tubesRepeat.push(angular.copy(self.tube))
      }
      renderBarcode();
    };

    function renderBarcode() {
      var barcodeContainer = $element.find('svg')[0];
      JsBarcode(barcodeContainer, self.tube.code, BARCODE_SETTINGS);
    }
  }
}());

(function() {
    'use strict';

    angular
      .module('otusjs.labelMaker.labelBuilder.labelComponents')
      .component('participantLabel', {
          transclude: true,
          template:'<div class="label"><div class="label-text"><h3>{{$ctrl.BaseInfo.participant_name}}</h3><span>CQ:{{$ctrl.BaseInfo.cq_group}}</span><br></div><svg id="{{$ctrl.BaseInfo.recruitment_number}}" class="barcode"></svg></div>',
          controller: Controller,
          bindings: {
            base: '<'
          }
      });

      Controller.$inject = [
        '$scope',
        '$element',
        '$compile',
        'BARCODE_SETTINGS'
      ];

      function Controller($scope, $element, $compile, BARCODE_SETTINGS) {
        var self = this;

        self.renderBarcode = renderBarcode;
        self.BaseInfo = angular.copy(self.base);

        self.$onInit = function() {
          $compile($element.contents())($scope);
          renderBarcode();
        };

        function renderBarcode() {
          var barcodeContainer = $element.find('svg')[0];
          JsBarcode(barcodeContainer, self.base.recruitment_number, BARCODE_SETTINGS);
        }
      }
}());

(function() {
    'use strict';

    angular
      .module('otusjs.labelMaker.labelBuilder.labelComponents')
      .component('unattachedLaboratoryLabel', {
          transclude: true,
          template:'<div class="label"><div class="label-text"><p>Laborat√≥rio</p><span>Centro:{{$ctrl.LaboratoryBaseInfo.laboratoryFieldCenter}}</span><br><span>CQ:{{$ctrl.LaboratoryBaseInfo.cq_group}}</span><br></div><svg id="{{$ctrl.BaseInfo.laboratoryIdentification}}" class="barcode"></svg></div>',
          controller: Controller,
          bindings: {
            base: '<'
          }
      });

      Controller.$inject = [
        '$scope',
        '$element',
        '$compile',
        'BARCODE_SETTINGS'
      ];

      function Controller($scope, $element, $compile, BARCODE_SETTINGS) {
        var self = this;
        self.LaboratoryBaseInfo = angular.copy(self.base);

        self.$onInit = function() {
          $compile($element.contents())($scope);
          renderBarcode();
        };

        function renderBarcode() {
          var barcodeContainer = $element.find('svg')[0];
          JsBarcode(barcodeContainer, self.base.laboratoryIdentification, BARCODE_SETTINGS);
        }
      }
}());

(function() {
    'use strict';

    angular
      .module('otusjs.labelMaker.labelBuilder.labelComponents')
      .component('baseLabel', {
          transclude: true,
          template:'<div class="label" ng-if="$ctrl.labelComponent == \'participant\'"><div class="label-text"><h3>{{$ctrl.BaseInfo.participant_name}}</h3><span>CQ:{{$ctrl.BaseInfo.cq_group}}</span><br></div><svg id="{{$ctrl.BaseInfo.recruitment_number}}" class="barcode"></svg></div><div class="label" ng-if="$ctrl.labelComponent == \'biomaterial\'"><h1>here</h1><div class="label-text"><p>{{$ctrl.tube.label}}</p><div ng-style=\'{"overflow": "hidden","white-space": "nowrap","text-overflow": "ellipsis"}\'><span>{{$ctrl.BaseInfo.participant_name}}</span><br></div><div layout-align="space-between center" layout="row" flex><span>NR:{{$ctrl.BaseInfo.recruitment_number}}</span> <span>Sexo:{{$ctrl.BaseInfo.gender}}</span></div><div layout-align="space-between center" layout="row" flex><span>DN:{{$ctrl.BaseInfo.birthday}}</span> <span ng-show="$ctrl.BaseInfo.laboratoryIdentification != null">Kit: {{$ctrl.BaseInfo.laboratoryIdentification}}</span></div></div><svg id="{{$ctrl.tube.code}}" class="barcode"></svg></div>',
          controller: Controller,
          bindings: {
            labelComponent: '=',
            base: '=',
            tube: '=',
            aliquot: '=',
            labInfo: '='
          }
      });

      Controller.$inject = [
        '$scope',
        '$element',
        '$compile',
        'BARCODE_SETTINGS'
      ];

      function Controller($scope, $element, $compile, BARCODE_SETTINGS) {
        var self = this;

        self.renderBarcode = renderBarcode;
        self.BaseInfo = angular.copy(self.base);

        self.$onInit = function() {
          $compile($element.contents())($scope);
          renderBarcode();
        };

        function renderBarcode() {
          var barcodeContainer = $element.find('svg')[0];
          if(self.labelComponent == "biomaterial"){
            JsBarcode(barcodeContainer, self.tube.code, BARCODE_SETTINGS);
          }
        }
      }
}());

(function () {
  'use strict';

  angular
    .module('otusjs.labelMaker.labelPage', []);
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.labelPage')
    .directive('labelPage', directive);

  directive.$inject = [
    '$window',
    '$compile',
    'otusjs.labelMaker.labelBuilder.LabelService'
  ];

  function directive($window, $compile, LabelService) {
    var ddo = {
      restrict: 'EA',
      scope: {},
      transclude: true,
      template:'<div id="print-page" layout-align="start center" ng-if="$ctrl.loadComponents"><participant-label base="$ctrl.baseInfo" ng-if="$ctrl.laboratoryInfo.laboratoryIdentification == null"></participant-label><unattached-laboratory-label base="$ctrl.laboratoryInfo" ng-if="$ctrl.laboratoryInfo.laboratoryIdentification != null"></unattached-laboratory-label><tubes-label base="$ctrl.baseInfo" tube="tube" ng-repeat="tube in $ctrl.tubesList track by $index"></tubes-label></div>',
      controller: Controller,
      controllerAs: '$ctrl',
    };

    function Controller($element, $scope) {
      var self = this;
      self.printPage = self.printPage;

      init();

      function init() {
        self.baseInfo = {};
        self.tubesList = [];
        LabelService.pushInfo($scope.$parent.labelData);
        _setInfo();
      }

      function _setInfo() {
        self.tubesList = LabelService.getTubesList();
        self.baseInfo = LabelService.getBaseInfo();
        self.laboratoryInfo = LabelService.getLaboratoryInfo();

        self.loadComponents = true;
      }

      $scope.$$postDigest(function() {
        _generateWindow();
      });

      function _generateWindow() {
        var newWindow = $window.open('about:blank', '_blank');

        newWindow.document.write('<html>' +
          '<head><title>Etiquetas</title>' +
          '<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,400italic" rel="stylesheet" />' +
          '<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />' +
          '<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/angular_material/1.1.1/angular-material.min.css">' +
          '<link rel="stylesheet" type="text/css" href="node_modules/label-maker-js/dist/label-maker-js/css/otusjs-label-page.min.css"/>' +
          '</head>' +
          '<button class="no-print button-print md-button md-fab md-mini" onclick="window.print()" >' +
          '<i class="material-icons white">print</i>'+
          '</button>' +
          '<body></body>' +
          '<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js" type="text/javascript"></script></html>');

         angular.element(newWindow.document.body)
          .append($element.contents());

        newWindow.document.close();
      }

    }
    return ddo;
  }
}());

(function() {
  'use strict';

  angular
    .module('otusjs.labelMaker.dataBuilder',['ngResource']);
}());

(function () {
  'use strict';

  angular
    .module('otusjs.labelMaker.dataBuilder')
    .service('otusjs.labelMaker.dataBuilder.DataBuilderService', Service);

  Service.$inject = [
    '$rootScope',
    '$resource'
  ];

  function Service($rootScope, $resource) {
    var self = this,

      _baseInfo = {},
      _unattachedLaboratoryInfo = {},
      _tubesList,
      baseInfoModel = {
        cq_group: null,
        participant_name: null,
        recruitment_number: null,
        gender: null,
        birthday: null
      },
      unattachedLaboratoryInfoModel = {
        cq_group: null,
        laboratoryIdentification: null,
        laboratoryFieldCenter: null
      };

    self.fetchTubesData = fetchTubesData;
    self.getBaseInfo = getBaseInfo;
    self.getLaboratoryInfo = getLaboratoryInfo;
    self.getTubesList = getTubesList;
    self.pushInfo = pushInfo;

    function fetchTubesData() {
      _getInfo().getData().$promise
        .then(function (data) {
          _setInfo(data);
          $rootScope.$broadcast("Data_Ready", data);
        })
        .catch(function (err) {
          $rootScope.$broadcast("Data_Error", err); //TODO set listener
        });
    }

    function getBaseInfo() {
      return _baseInfo;
    }

    function getLaboratoryInfo() {
      return _unattachedLaboratoryInfo;
    }

    function getTubesList() {
      return _tubesList;
    }

    function _setInfo(data) {
      angular.extend(_baseInfo, baseInfoModel, data);
      angular.extend(_unattachedLaboratoryInfo, unattachedLaboratoryInfoModel, data);
      _tubesList = data.tubes;
    }

    function pushInfo(labParticipant) {
      if (labParticipant) {
        var parse = labParticipant;
        _setInfo(parse);
      } else {
        fetchTubesData();
      }
    }

    function _getInfo() {
      var params = {
        participant_id: ''
      };

      return $resource('app/assets/participant-tubes-set.json', params, {
        getData: {
          method: 'GET',
          isArray: false
        }
      });
    }
  }
}());
